{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation sample template that contains a single Lambda function behind an API Gateway",
    "Resources": {
        "IAMRoleAmazonSesVerificationRecords": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "AllowTheLambdaFunctionToAssumeThisRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "SesAccess",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ses:VerifyDomainDkim",
                                        "ses:VerifyDomainIdentity"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "Route53Access",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "route53:GetHostedZone",
                                        "route53:ChangeResourceRecordSets"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Sub": [
                                                "arn:aws:route53:::hostedzone/${HostedZoneId}",
                                                {
                                                    "HostedZoneId": {
                                                        "Ref": "UnbeatableDNS"
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "RoleName": "LAMNDA_DOMAIN_KEYS"
            }
        },
        "IAMRoleLambdaAccessDynamoES": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
                ],
                "Path": "/",
                "RoleName": "LAMNDA_ACCESS_DYNAMO_ES"
            }
        },
        "UnbeatableDNS": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "HostedZoneConfig": {
                    "Comment": "My hosted zone for unbeatable.co.in"
                },
                "Name": "unbeatable.co.in"
            }
        },
        "MailFetchApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Mail Fetch API",
                "Description": "API used for Fetching mails",
                "FailOnWarnings": true
            }
        },
        "EmailSearchResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "MailFetchApi"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "MailFetchApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "emails"
            }
        },
        "EmailGetSearchResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "MailFetchApi"
                },
                "ParentId": {
                    "Ref": "EmailSearchResource"
                },
                "PathPart": "{messageId}"
            }
        },
        "EmailModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "ContentType": "application/json",
                "Name": "Email",
                "RestApiId": {
                    "Ref": "MailFetchApi"
                },
                "Schema": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Email",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "messageId": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "messageId"
                    ]
                }
            }
        },
        "LambdaFetchStoredEmails": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Sub": "sam-${AWS::Region}-${AWS::AccountId}"
                    },
                    "S3Key": "fetchStoredEmails.zip"
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "IAMRoleLambdaAccessDynamoES",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs10.x",
                "Timeout": 25,
                "MemorySize": 128
            }
        },
        "SesVerificationRecordsLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Sub": "sam-${AWS::Region}-${AWS::AccountId}"
                    },
                    "S3Key": "SesVerificationRecordsLambda.zip"
                },
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "IAMRoleAmazonSesVerificationRecords",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs10.x",
                "Timeout": 25,
                "MemorySize": 128
            }
        },
        "SesVerificationRecords": {
            "Type": "AWS::CloudFormation::CustomResource",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "SesVerificationRecordsLambda",
                        "Arn"
                    ]
                },
                "HostedZoneId": {
                    "Ref": "UnbeatableDNS"
                }
            }
        }
    }
}